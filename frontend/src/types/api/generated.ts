/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/card-statements": {
    /** ログインユーザーのすべてのカード明細を取得する */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["model.CardStatementResponse"][];
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/card-statements/preview": {
    /** カード明細のCSVファイルをアップロードして解析するが、DBには保存しない */
    post: {
      parameters: {
        formData: {
          /** CSVファイル */
          file: unknown;
          /** カード種類 (rakuten, mufg, epos) */
          card_type: string;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["model.CardStatementResponse"][];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/card-statements/save": {
    /** プレビューしたカード明細データをデータベースに保存する */
    post: {
      parameters: {
        body: {
          /** 保存するカード明細データ */
          request: definitions["model.CardStatementSaveRequest"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["model.CardStatementResponse"][];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/card-statements/upload": {
    /** カード明細のCSVファイルをアップロードして解析する */
    post: {
      parameters: {
        formData: {
          /** CSVファイル */
          file: unknown;
          /** カード種類 (rakuten, mufg, epos) */
          card_type: string;
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["model.CardStatementResponse"][];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/card-statements/{cardStatementId}": {
    /** 指定されたIDのカード明細を取得する */
    get: {
      parameters: {
        path: {
          /** カード明細ID */
          cardStatementId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["model.CardStatementResponse"];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/csrf-token": {
    /** CSRFトークンを取得する */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["model.CsrfTokenResponse"];
        };
      };
    };
  };
  "/csv-histories": {
    /** ログインユーザーのすべてのCSV履歴を取得する */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["model.CSVHistoryResponse"][];
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
    /** カード明細のCSVファイルを履歴として保存する */
    post: {
      parameters: {
        formData: {
          /** CSVファイル */
          file: unknown;
          /** ファイル名 */
          file_name: string;
          /** カード種類 (rakuten, mufg, epos) */
          card_type: string;
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["model.CSVHistoryResponse"];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/csv-histories/{csvHistoryId}": {
    /** 指定されたIDのCSV履歴を取得する */
    get: {
      parameters: {
        path: {
          /** CSV履歴ID */
          csvHistoryId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["model.CSVHistoryDetailResponse"];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
    /** 指定されたIDのCSV履歴を削除する */
    delete: {
      parameters: {
        path: {
          /** CSV履歴ID */
          csvHistoryId: number;
        };
      };
      responses: {
        /** No Content */
        204: {
          schema: string;
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/csv-histories/{csvHistoryId}/download": {
    /** 指定されたIDのCSV履歴からCSVファイルをダウンロードする */
    get: {
      parameters: {
        path: {
          /** CSV履歴ID */
          csvHistoryId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: unknown;
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/dev/card-statements/delete-all": {
    /** 開発環境限定で全カード明細レコードを削除する */
    post: {
      responses: {
        /** OK */
        200: {
          schema: definitions["model.DevCardStatementResponse"];
        };
        /** Forbidden */
        403: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/login": {
    /** 既存ユーザーのログイン処理 */
    post: {
      parameters: {
        body: {
          /** ログイン情報 */
          user: definitions["model.UserLoginRequest"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: string;
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/logout": {
    /** ユーザーのログアウト処理 */
    post: {
      responses: {
        /** OK */
        200: {
          schema: string;
        };
      };
    };
  };
  "/signup": {
    /** 新しいユーザーアカウントを作成する */
    post: {
      parameters: {
        body: {
          /** ユーザー登録情報 */
          user: definitions["model.UserSignupRequest"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["model.UserResponse"];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/tasks": {
    /** ログインユーザーのすべてのタスクを取得する */
    get: {
      responses: {
        /** OK */
        200: {
          schema: definitions["model.TaskResponse"][];
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
    /** ユーザーの新しいタスクを作成する */
    post: {
      parameters: {
        body: {
          /** タスク情報 */
          task: definitions["model.TaskRequest"];
        };
      };
      responses: {
        /** Created */
        201: {
          schema: definitions["model.TaskResponse"];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
  "/tasks/{taskId}": {
    /** 指定されたIDのタスクを取得する */
    get: {
      parameters: {
        path: {
          /** タスクID */
          taskId: number;
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["model.TaskResponse"];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
    /** 指定されたIDのタスクを更新する */
    put: {
      parameters: {
        path: {
          /** タスクID */
          taskId: number;
        };
        body: {
          /** 更新するタスク情報 */
          task: definitions["model.TaskRequest"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["model.TaskResponse"];
        };
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
    /** 指定されたIDのタスクを削除する */
    delete: {
      parameters: {
        path: {
          /** タスクID */
          taskId: number;
        };
      };
      responses: {
        /** No Content */
        204: never;
        /** Bad Request */
        400: {
          schema: { [key: string]: string };
        };
        /** Internal Server Error */
        500: {
          schema: { [key: string]: string };
        };
      };
    };
  };
}

export interface definitions {
  "model.CSVHistoryDetailResponse": {
    /** @example rakuten */
    card_type?: string;
    /** @example 2023-01-01T00:00:00Z */
    created_at?: string;
    file_data?: number[];
    /** @example rakuten_202301.csv */
    file_name?: string;
    /** @example 1 */
    id?: number;
    /** @example 2023-01-01T00:00:00Z */
    updated_at?: string;
  };
  "model.CSVHistoryResponse": {
    /** @example rakuten */
    card_type?: string;
    /** @example 2023-01-01T00:00:00Z */
    created_at?: string;
    /** @example rakuten_202301.csv */
    file_name?: string;
    /** @example 1 */
    id?: number;
    /** @example 2023-01-01T00:00:00Z */
    updated_at?: string;
  };
  "model.CardStatementResponse": {
    /** @example 10000 */
    amount?: number;
    /** @example 0 */
    annual_rate?: number;
    /** @example 楽天カード */
    card_type?: string;
    /** @example 0 */
    charge_amount?: number;
    /** @example 2023-01-01T00:00:00Z */
    created_at?: string;
    /** @example Amazon.co.jp */
    description?: string;
    /** @example 1 */
    id?: number;
    /** @example 1 */
    installment_count?: number;
    /** @example 0 */
    monthly_rate?: number;
    /** @example 0 */
    payment_count?: number;
    /** @example 2023/02/27 */
    payment_date?: string;
    /** @example 2023年02月 */
    payment_month?: string;
    /** @example 10000 */
    remaining_balance?: number;
    /** @example 1 */
    statement_no?: number;
    /** @example 10000 */
    total_charge_amount?: number;
    /** @example 発生 */
    type?: string;
    /** @example 2023-01-01T00:00:00Z */
    updated_at?: string;
    /** @example 2023/01/01 */
    use_date?: string;
  };
  "model.CardStatementSaveRequest": {
    card_statements: definitions["model.CardStatementSummary"][];
    /** @example rakuten */
    card_type: string;
  };
  "model.CardStatementSummary": {
    amount?: number;
    annual_rate?: number;
    card_type?: string;
    charge_amount?: number;
    description?: string;
    installment_count?: number;
    monthly_rate?: number;
    payment_count?: number;
    payment_date?: string;
    payment_month?: string;
    remaining_balance?: number;
    statement_no?: number;
    total_charge_amount?: number;
    type?: string;
    use_date?: string;
  };
  "model.CsrfTokenResponse": {
    /** @example token-string-here */
    csrf_token?: string;
  };
  "model.DevCardStatementResponse": {
    /** @example 42 */
    deleted_rows?: number;
    /** @example All card statements deleted successfully */
    message?: string;
  };
  "model.TaskRequest": {
    /** @example 買い物に行く */
    title: string;
  };
  "model.TaskResponse": {
    /** @example 2023-01-01T00:00:00Z */
    created_at?: string;
    /** @example 1 */
    id?: number;
    /** @example 買い物に行く */
    title?: string;
    /** @example 2023-01-01T00:00:00Z */
    updated_at?: string;
  };
  "model.UserLoginRequest": {
    /** @example user@example.com */
    email: string;
    /** @example password123 */
    password: string;
  };
  "model.UserResponse": {
    /** @example user@example.com */
    email?: string;
    /** @example 1 */
    id?: number;
  };
  "model.UserSignupRequest": {
    /** @example user@example.com */
    email: string;
    /** @example password123 */
    password: string;
  };
}

export interface operations {}

export interface external {}
